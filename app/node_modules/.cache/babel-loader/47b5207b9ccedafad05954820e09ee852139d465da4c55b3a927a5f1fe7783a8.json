{"ast":null,"code":"import axios from \"axios\";\n/*\r\n    * This file is used to set the data table\r\n\r\n    * @param {string} url - The url to get the data from\r\n\r\n    * @param {string} tableId - The id of the table\r\n\r\n    * @param {string} language - The language of the table\r\n\r\n*/\nexport var table = [{\n  name: 'User',\n  fields: [\"id\", \"name\", \"email\", \"role\", \"created_at\", \"updated_at\"],\n  data: []\n}, {\n  name: 'Post',\n  fields: [\"id\", \"title\", \"content\", \"user_id\", \"created_at\", \"updated_at\"],\n  data: []\n}, {\n  name: 'Comment',\n  fields: [{\n    id: 'id'\n  }, {\n    content: 'content'\n  }, {\n    createdAtame: 'createdAt'\n  }, {\n    updatedAt: 'updatedAt'\n  }],\n  data: []\n}, {\n  name: 'Tag',\n  fields: [{\n    id: 'id'\n  }, {\n    name: 'name'\n  }, {\n    createdAt: 'createdAt'\n  }, {\n    updatedAt: 'updatedAt'\n  }],\n  data: []\n}];\nexport function getData(api, tableName) {\n  //table[tableName].datas = [] ;\n  var getIndex = function (name) {\n    for (var i in table) {\n      if (table[i].name == name) {\n        return i;\n      }\n      throw new Error(\"Table not found\");\n    }\n  };\n  var index = getIndex(tableName);\n  axios.get(api).then(res => {\n    table[index].data = res.data;\n    return table[index].data;\n  }).catch(error => {\n    throw error;\n  });\n  return null;\n}","map":{"version":3,"names":["axios","table","name","fields","data","id","content","createdAtame","updatedAt","createdAt","getData","api","tableName","getIndex","i","Error","index","get","then","res","catch","error"],"sources":["D:/Template-VueJS-Coder-Tholv/template/src/config/data/setDataTable.js"],"sourcesContent":["import axios from \"axios\";\r\n/*\r\n    * This file is used to set the data table\r\n\r\n    * @param {string} url - The url to get the data from\r\n\r\n    * @param {string} tableId - The id of the table\r\n\r\n    * @param {string} language - The language of the table\r\n\r\n*/\r\nexport var table = [\r\n    {\r\n        name  : 'User',\r\n        fields: [\r\n            \"id\",\r\n            \"name\",\r\n            \"email\",\r\n            \"role\",\r\n            \"created_at\",\r\n            \"updated_at\"\r\n        ],data: [\r\n\r\n        ]    \r\n    },\r\n    {\r\n        name  : 'Post',\r\n        fields: [\r\n            \"id\",\r\n            \"title\",\r\n            \"content\",\r\n            \"user_id\",\r\n            \"created_at\",\r\n            \"updated_at\"\r\n        ],data: [\r\n\r\n        ]    \r\n    },\r\n    {\r\n        name  : 'Comment',\r\n        fields: [\r\n            {id : 'id'},\r\n            {content : 'content'},\r\n            {createdAtame : 'createdAt'},\r\n            {updatedAt : 'updatedAt'}\r\n        ],data: [\r\n\r\n        ]   \r\n    },\r\n    {\r\n        name  : 'Tag',\r\n        fields: [\r\n            {id : 'id'},\r\n            {name : 'name'},\r\n            {createdAt : 'createdAt'},\r\n            {updatedAt : 'updatedAt'}\r\n        ],data: [\r\n\r\n        ]   \r\n    }\r\n\r\n];\r\nexport  function getData(api,tableName){\r\n    //table[tableName].datas = [] ;\r\n        var getIndex = function (name) {\r\n            for(var i in table){\r\n                if(table[i].name == name){\r\n                    return i;\r\n                }\r\n                throw new Error(\"Table not found\");\r\n            }\r\n        }\r\n\r\n        var index = getIndex(tableName);\r\n        axios.get(api).then(res =>{\r\n        table[index].data = res.data;\r\n        return table[index].data;\r\n     }).catch(error => {\r\n        throw error;\r\n     });\r\n     return null ;\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,KAAK,GAAG,CACf;EACIC,IAAI,EAAI,MAAM;EACdC,MAAM,EAAE,CACJ,IAAI,EACJ,MAAM,EACN,OAAO,EACP,MAAM,EACN,YAAY,EACZ,YAAY,CACf;EAACC,IAAI,EAAE;AAGZ,CAAC,EACD;EACIF,IAAI,EAAI,MAAM;EACdC,MAAM,EAAE,CACJ,IAAI,EACJ,OAAO,EACP,SAAS,EACT,SAAS,EACT,YAAY,EACZ,YAAY,CACf;EAACC,IAAI,EAAE;AAGZ,CAAC,EACD;EACIF,IAAI,EAAI,SAAS;EACjBC,MAAM,EAAE,CACJ;IAACE,EAAE,EAAG;EAAI,CAAC,EACX;IAACC,OAAO,EAAG;EAAS,CAAC,EACrB;IAACC,YAAY,EAAG;EAAW,CAAC,EAC5B;IAACC,SAAS,EAAG;EAAW,CAAC,CAC5B;EAACJ,IAAI,EAAE;AAGZ,CAAC,EACD;EACIF,IAAI,EAAI,KAAK;EACbC,MAAM,EAAE,CACJ;IAACE,EAAE,EAAG;EAAI,CAAC,EACX;IAACH,IAAI,EAAG;EAAM,CAAC,EACf;IAACO,SAAS,EAAG;EAAW,CAAC,EACzB;IAACD,SAAS,EAAG;EAAW,CAAC,CAC5B;EAACJ,IAAI,EAAE;AAGZ,CAAC,CAEJ;AACD,OAAQ,SAASM,OAAO,CAACC,GAAG,EAACC,SAAS,EAAC;EACnC;EACI,IAAIC,QAAQ,GAAG,UAAUX,IAAI,EAAE;IAC3B,KAAI,IAAIY,CAAC,IAAIb,KAAK,EAAC;MACf,IAAGA,KAAK,CAACa,CAAC,CAAC,CAACZ,IAAI,IAAIA,IAAI,EAAC;QACrB,OAAOY,CAAC;MACZ;MACA,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;IACtC;EACJ,CAAC;EAED,IAAIC,KAAK,GAAGH,QAAQ,CAACD,SAAS,CAAC;EAC/BZ,KAAK,CAACiB,GAAG,CAACN,GAAG,CAAC,CAACO,IAAI,CAACC,GAAG,IAAG;IAC1BlB,KAAK,CAACe,KAAK,CAAC,CAACZ,IAAI,GAAGe,GAAG,CAACf,IAAI;IAC5B,OAAOH,KAAK,CAACe,KAAK,CAAC,CAACZ,IAAI;EAC3B,CAAC,CAAC,CAACgB,KAAK,CAACC,KAAK,IAAI;IACf,MAAMA,KAAK;EACd,CAAC,CAAC;EACF,OAAO,IAAI;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}