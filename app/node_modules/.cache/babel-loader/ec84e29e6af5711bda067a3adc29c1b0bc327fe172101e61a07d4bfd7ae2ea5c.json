{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"CreateAccount\",\n  data: () => {\n    return {\n      user: {\n        name: '',\n        email: '',\n        password: '',\n        password_confirmation: ''\n      },\n      validate: {\n        name: {\n          isErrorLength: {\n            min\n          },\n          isBlank: false\n        },\n        email: {\n          isErrorLength: false,\n          isBlank: false,\n          isInValid: false\n        },\n        password: {\n          isErrorLength: false,\n          isBlank: false,\n          isNotEquals: false\n        },\n        password_confirmation: {\n          isErrorLength: false,\n          isBlank: false\n        }\n      }\n    };\n  },\n  components: {},\n  methods: {\n    register() {\n      this.validate.name.isBlank = this.user.name == '';\n      this.validate.name.isErrorLength = this.user.name.length < 3;\n      this.validate.email.isBlank = this.user.email == '';\n      this.validate.email.isInValid = !this.validateEmail(this.user.email);\n      this.validate.password.isBlank = this.user.password == '';\n      this.validate.password.isErrorLength = this.user.password.length < 8;\n      this.validate.password.isNotEquals = this.user.password != this.user.password_confirmation;\n      this.validate.password_confirmation.isBlank = this.user.password_confirmation == '';\n      if (this.validate.name.isBlank || this.validate.name.isErrorLength || this.validate.email.isBlank || this.validate.email.isInValid || this.validate.password.isBlank || this.validate.password.isErrorLength || this.validate.password.isNotEquals || this.validate.password_confirmation.isBlank) {\n        return;\n      }\n      axios.post('http://localhost:8000/api/register', this.user).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AA6EA,OAAOA,KAAI,MAAO,OAAM;AACxB,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,IAAG,EAAI,MAAM;IACX,OAAO;MACLC,IAAI,EAAE;QACJF,IAAI,EAAE,EAAE;QACRG,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,qBAAqB,EAAE;MACzB,CAAC;MAACC,QAAO,EACT;QACEN,IAAI,EAAE;UACJO,aAAa,EAAE;YACbC;UACF,CAAC;UACDC,OAAM,EAAI;QACZ,CAAC;QACDN,KAAK,EACL;UACEI,aAAa,EAAE,KAAK;UACpBE,OAAM,EAAI,KAAI;UACdC,SAAQ,EAAI;QACd,CAAC;QACDN,QAAQ,EAAE;UACRG,aAAa,EAAE,KAAK;UACpBE,OAAM,EAAI,KAAI;UACdE,WAAU,EAAI;QAChB,CAAC;QACDN,qBAAqB,EAAC;UACpBE,aAAa,EAAE,KAAK;UACpBE,OAAM,EAAI;QACZ;MACF;IACF;EACF,CAAC;EACDG,UAAU,EAAE,CAAC,CAAC;EACdC,OAAO,EAAE;IACPC,QAAQ,GAAE;MACR,IAAI,CAACR,QAAQ,CAACN,IAAI,CAACS,OAAM,GAAI,IAAI,CAACP,IAAI,CAACF,IAAG,IAAK,EAAE;MACjD,IAAI,CAACM,QAAQ,CAACN,IAAI,CAACO,aAAY,GAAI,IAAI,CAACL,IAAI,CAACF,IAAI,CAACe,MAAK,GAAI,CAAC;MAC5D,IAAI,CAACT,QAAQ,CAACH,KAAK,CAACM,OAAM,GAAI,IAAI,CAACP,IAAI,CAACC,KAAI,IAAK,EAAE;MACnD,IAAI,CAACG,QAAQ,CAACH,KAAK,CAACO,SAAQ,GAAI,CAAC,IAAI,CAACM,aAAa,CAAC,IAAI,CAACd,IAAI,CAACC,KAAK,CAAC;MACpE,IAAI,CAACG,QAAQ,CAACF,QAAQ,CAACK,OAAM,GAAI,IAAI,CAACP,IAAI,CAACE,QAAO,IAAK,EAAE;MACzD,IAAI,CAACE,QAAQ,CAACF,QAAQ,CAACG,aAAY,GAAI,IAAI,CAACL,IAAI,CAACE,QAAQ,CAACW,MAAK,GAAI,CAAC;MACpE,IAAI,CAACT,QAAQ,CAACF,QAAQ,CAACO,WAAU,GAAI,IAAI,CAACT,IAAI,CAACE,QAAO,IAAK,IAAI,CAACF,IAAI,CAACG,qBAAqB;MAC1F,IAAI,CAACC,QAAQ,CAACD,qBAAqB,CAACI,OAAM,GAAI,IAAI,CAACP,IAAI,CAACG,qBAAoB,IAAK,EAAE;MACnF,IAAG,IAAI,CAACC,QAAQ,CAACN,IAAI,CAACS,OAAM,IAAK,IAAI,CAACH,QAAQ,CAACN,IAAI,CAACO,aAAY,IAAK,IAAI,CAACD,QAAQ,CAACH,KAAK,CAACM,OAAM,IAAK,IAAI,CAACH,QAAQ,CAACH,KAAK,CAACO,SAAQ,IAAK,IAAI,CAACJ,QAAQ,CAACF,QAAQ,CAACK,OAAM,IAAK,IAAI,CAACH,QAAQ,CAACF,QAAQ,CAACG,aAAY,IAAK,IAAI,CAACD,QAAQ,CAACF,QAAQ,CAACO,WAAU,IAAK,IAAI,CAACL,QAAQ,CAACD,qBAAqB,CAACI,OAAO,EAChS;QACE;MACF;MACAV,KAAK,CAACkB,IAAI,CAAC,oCAAoC,EAAC,IAAI,CAACf,IAAI,EACxDgB,IAAI,CAAEC,QAAQ,IAAK;QAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACvB,CAAC,EACAG,KAAK,CAAEC,KAAK,IAAK;QAChBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;MACpB,CAAC;IACH;EACA;AACJ,CAAC","names":["axios","name","data","user","email","password","password_confirmation","validate","isErrorLength","min","isBlank","isInValid","isNotEquals","components","methods","register","length","validateEmail","post","then","response","console","log","catch","error"],"sourceRoot":"","sources":["D:\\Template-VueJS-Coder-Tholv\\template\\src\\views\\CreateAccount.vue"],"sourcesContent":["<template>\r\n    <section class=\"vh-100\" style=\"background-color: #eee;\">\r\n        <div class=\"container h-100\">\r\n          <div class=\"row d-flex justify-content-center align-items-center h-100\">\r\n            <div class=\"col-lg-12 col-xl-11\">\r\n              <div class=\"card text-black\" style=\"border-radius: 25px;\">\r\n                <div class=\"card-body p-md-5\">\r\n                  <div class=\"row justify-content-center\">\r\n                    <div class=\"col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1\">\r\n      \r\n                      <p class=\"text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4\">{{$t('sign_up.title')}}</p>\r\n      \r\n                      <form class=\"mx-1 mx-md-4\" @submit.prevent=\"register\">\r\n      \r\n                        <div class=\"d-flex flex-row align-items-center mb-4\">\r\n                          <i class=\"fas fa-user fa-lg me-3 fa-fw\"></i>\r\n                          <div class=\"form-floating flex-fill mb-0\">\r\n                            <input type=\"text\" id=\"form3Example1c\" class=\"form-control\"  v-model=\"user.name\"/>\r\n                            <label class=\"form-label\" for=\"form3Example1c\">{{$t('sign_up.input.name')}}</label>\r\n                          </div>\r\n                        <small v-if=\"validate.name.isBlank\">{{$t('sign_up.validate.name.required')}}</small>\r\n                        <small v-if=\"validate.name.isErrorLength\">{{$t('sign_up.validate.name.minlength')}}</small>\r\n                      </div>\r\n      \r\n                        <div class=\"d-flex flex-row align-items-center mb-4\">\r\n                          <i class=\"fas fa-envelope fa-lg me-3 fa-fw\"></i>\r\n                          <div class=\"form-floating flex-fill mb-0\">\r\n                            <input type=\"email\" id=\"form3Example3c\" class=\"form-control\"  v-model=\"user.email\"/>\r\n                            <label class=\"form-label\" for=\"form3Example3c\">{{$t('sign_up.input.email')}}</label>\r\n                          </div>\r\n                        </div>\r\n      \r\n                        <div class=\"d-flex flex-row align-items-center mb-4\">\r\n                          <i class=\"fas fa-lock fa-lg me-3 fa-fw\"></i>\r\n                          <div class=\"form-floating flex-fill mb-0\">\r\n                            <input type=\"password\" id=\"form3Example4c\" class=\"form-control\"  v-model=\"user.password\"/>\r\n                            <label class=\"form-label\" for=\"form3Example4c\">{{$t('sign_up.input.password')}}</label>\r\n                          </div>\r\n                        </div>\r\n      \r\n                        <div class=\"d-flex flex-row align-items-center mb-4\">\r\n                          <i class=\"fas fa-key fa-lg me-3 fa-fw\"></i>\r\n                          <div class=\"form-floating flex-fill mb-0\">\r\n                            <input type=\"password\" id=\"form3Example4cd\" class=\"form-control\"  v-model=\"user.password_confirmation\"/>\r\n                            <label class=\"form-label\" for=\"form3Example4cd\">{{$t('sign_up.input.confirm_password')}}</label>\r\n                          </div>\r\n                        </div>\r\n      \r\n                        <div class=\"form-check d-flex justify-content-center mb-5\">\r\n                          <input class=\"form-check-input me-2\" type=\"checkbox\" value=\"\" id=\"form2Example3c\" />\r\n                          <label class=\"form-check-label\" for=\"form2Example3\">\r\n                            {{$t('sign_up.input.confirm_statement')}}\r\n                          </label>\r\n                        </div>\r\n      \r\n                        <div class=\"d-flex justify-content-center mx-4 mb-3 mb-lg-4\">\r\n                          <button type=\"submit\" class=\"btn btn-primary btn-lg\">{{$t('sign_up.input.register')}}</button>\r\n                        </div>\r\n      \r\n                      </form>\r\n      \r\n                    </div>\r\n                    <div class=\"col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2\">\r\n      \r\n                      <img src=\"../assets/images/draw2.webp\"\r\n                        class=\"img-fluid\" alt=\"Sample image\">\r\n      \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n  name: \"CreateAccount\",\r\n  data : () => {\r\n    return {\r\n      user: {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password_confirmation: ''\r\n      },validate :\r\n      {\r\n        name: {\r\n          isErrorLength: {\r\n            min\r\n          },\r\n          isBlank : false ,\r\n        },\r\n        email: \r\n        {\r\n          isErrorLength: false,\r\n          isBlank : false ,\r\n          isInValid : false\r\n        },\r\n        password: {\r\n          isErrorLength: false,\r\n          isBlank : false ,\r\n          isNotEquals : false\r\n        },\r\n        password_confirmation:{\r\n          isErrorLength: false,\r\n          isBlank : false ,\r\n        }\r\n      }\r\n    }\r\n  },\r\n  components: {},\r\n  methods: {\r\n    register(){\r\n      this.validate.name.isBlank = this.user.name == '';\r\n      this.validate.name.isErrorLength = this.user.name.length < 3;\r\n      this.validate.email.isBlank = this.user.email == '';\r\n      this.validate.email.isInValid = !this.validateEmail(this.user.email);\r\n      this.validate.password.isBlank = this.user.password == '';\r\n      this.validate.password.isErrorLength = this.user.password.length < 8;\r\n      this.validate.password.isNotEquals = this.user.password != this.user.password_confirmation;\r\n      this.validate.password_confirmation.isBlank = this.user.password_confirmation == '';\r\n      if(this.validate.name.isBlank || this.validate.name.isErrorLength || this.validate.email.isBlank || this.validate.email.isInValid || this.validate.password.isBlank || this.validate.password.isErrorLength || this.validate.password.isNotEquals || this.validate.password_confirmation.isBlank)\r\n      {\r\n        return;\r\n      }\r\n      axios.post('http://localhost:8000/api/register',this.user)\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n    },\r\n    },\r\n};\r\n</script>\r\n<style scoped>\r\n.title{\r\n    font-size: 1.5rem;\r\n  }\r\n  small{\r\n    display: flex;\r\n    color: red;\r\n  }\r\n  .error{\r\n    border : 1px solid red;\r\n  \r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}